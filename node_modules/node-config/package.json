{
  "name": "node-config",
  "description": "Lightweight configuration engine for node.js",
  "author": {
    "name": "Artem Skvira"
  },
  "version": "0.0.2",
  "engines": {
    "node": ">=0.1.99"
  },
  "main": "./index.js",
  "readme": "## Description\nLightweight configuration engine for node.js\n\nAllows you to have a common configuration file with an ability to override particular\nsettings in host-specific configuratin files.\n\n## How it works\nFor example, certain settings, like name of your application, does not depend\non the environment (production/dev/CI), hence never changes:\n\nconf/common.js:\n    exports.conf = {\n        name: 'My Super Awesome Kick Ass Startup'\n    }\n\nbut the connection string to the database is different in case of\nCI/Dev/Production machines:\n\nconf/ci-hostname.js:\n    exports.conf = {\n        db_connection: 'ci.mongo-db.local'\n    }\n\nconf/my-dev.js:\n    exports.conf = {\n        db_connection: 'localhost'\n    }\n\nconf/linode.beefed-up.server.com.js:\n    exports.conf = {\n        db_connection: 'nosql-super-clustered-cloud-database'\n    }\n\nwhere ci-hostname/my-dev/linode.beefed-up.server.com are corresponding\nhostnames.\n\nNode-config will load common configuration values and then override them with\nappropriate values from host-specific config file.\n\n## Example\n\nLoading of configuration is as simple as this:\n\n    // Presuming that node-config sits under ./external folder in the project\n    require.paths.unshift('./external');\n\n    var conf = require('node-config'),\n        sys = require('sys');\n\n    conf.initConfig(\n        function(err) {\n            if(err) {\n                sys.log('Unable to init the config: ' + err); \n                return;\n            }\n\n            // Config loaded, can do those things now:\n\n            console.log(conf.db_connection);\n        }\n    );\n\nFor testing purposes you can override your hostname by supplying second argument \nto initConfig() function, just like that:\n\n    conf.initConfig(\n        function(err) { // your normal stuff goes here... },\n        'redefined-host-name'\n    );\n\nwhich will force node-config to load conf/redefined-host-name.js instead of your\nhost-specific config.\n\n\n## Setup\n\nYou need to have a `conf` directory in your project root folder (where your\nmain .js file sits), and it has to contain`common.js` file with following\nformat:\n    \n    exports.conf = {\n        name: 'value',\n        // ...\n        name_m: 'value M'\n    };\n\nIf you wish to add host-specific config files, execute `hostname` from command\nline to find out what your hostname is and name your config file accordingly.\n\nPlease see `node-config/conf/*` and `node-config/test.js` for examples.\n\nThanks!\n\n## License\n\nThe MIT License\n\nCopyright (c) 2010 by Artem Skvira\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "readme.md",
  "_id": "node-config@0.0.2",
  "_from": "node-config@"
}
